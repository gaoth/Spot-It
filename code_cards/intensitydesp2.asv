%gm = rgb2gray(im);
im1 = double(imread('001.png'))/255;
im2 = double(imread('003.png'))/255;

[L1,s1] = DoGScaleSpace(rgb2gray(im1),7);
[L2,s2] = DoGScaleSpace(rgb2gray(im2),7);
Es1 = findSSExtrema(L1);
Es2 = findSSExtrema(L2);
Extr1 = j_filterBlobs(rgb2gray(im1),L1,Es1,s1);
Extr2 = j_filterBlobs(rgb2gray(im2),L2,Es2,s2);
err = zeros(size(Extr1,1),size(Extr2,1));
for keypoint1 = 1:size(Extr1,1)
    x1 = Extr1(keypoint1,1);
    y1 = Extr1(keypoint1,2);
    lev1 = Extr1(keypoint1,3);
    sigma1 = s1(lev1);
    Whalf1 = ceil(3*1.5*sigma1);
    if x1 - Whalf1 <= 0 || x1 + Whalf1 >= size(im1,2)
        continue
    end
    if y1 - Whalf1 <= 0 || y1 + Whalf1 >= size(im1,1)
        continue
    end
    
%             margin_hor_l = x1 - Whalf;
%             margin_hor_r = x1 + Whalf;
%             margin_ver_u = y1 - Whalf;
%             margin_ver_b = y1 + Whalf;
            [patch1,theta1] = rottheta(im1,x1,y1,sigma1);
%             patch1 = rgb2gray(patch1);
        
    for keypoint2 =  1:size(Extr2,1)
        x2 = Extr2(keypoint2,1);
        y2 = Extr2(keypoint2,2);
        lev2 = Extr2(keypoint2,3);
        sigma2 = s2(lev2);
    Whalf2 = ceil(3*1.5*sigma2);
    if x2 - Whalf2 <= 0 || x2 + Whalf2 >= size(im2,2)
        continue
    end
    if y2 - Whalf2 <= 0 || y2 + Whalf2 >= size(im2,1)
        continue
    end
%             margin_hor_l = x2 - Whalf;
%             margin_hor_r = x2 + Whalf;
%             margin_ver_u = y2 - Whalf;
%             margin_ver_b = y2 + Whalf;
%             patch2 = im2(margin_ver_u:margin_ver_b,margin_hor_l:margin_hor_r,1:3);
            [patch2,theta2] = rottheta(im2,x2,y2,sigma2);
    for chan = 1:3
            %descp = hog(patch,x,y,Whalf);
            patch1chan = patch1(:,:,chan);
            patch2chan = patch2(:,:,chan);
%             patch2l2 = patch2(:,:,chan);
%             patch2l3 = patch2(:,:,chan);
            [r1 c1] = size(patch1(:,:,chan));
            [r2 c2] = size(patch2(:,:,chan));
            leng_rs = round(sqrt((r1^2+r2^2)/2));
            patch1chan = imresize(patch1chan,[leng_rs,leng_rs],'bilinear');
            patch2chan = imresize(patch2chan,[leng_rs,leng_rs],'bilinear');
            patch1chan = imrotate(patch1chan, theta, 'crop', 'bilinear');
            patch2chan = imrotate(patch2chan, theta, 'crop', 'bilinear');
%             patch2 = imresize(rgb2gray(patch2),[r c],'bilinear');
%             pat1vec = patch1(:);
%             pat2vec = patch2(:);
%             pat1vec = patch1chan(:);
%             pat2vec = patch2chan(:);

        pat1vec = sort(patch1chan(:),'descend');
        pat2vec = sort(patch2chan(:),'descend');
        err(keypoint1,keypoint2) = err(keypoint1,keypoint2)+sum((pat1vec - pat2vec).^2) ;
     end
    
    end
end

for i = 1:size(err,1)
    for j = 1:size(err,2)
        if err(i,j) ==0
            err(i,j) = 200;
        end
        
    end
end

[xy1,xy2] = match1(err,Extr1,Extr2,3);
[r,c,b] = size(im1);
    figure;
    im = [im1,im2];
    imagesc(im);
    hold on;
for i=1:size(xy1,1)
    
    plot(xy1(i,1),xy1(i,2),'r+');
    plot(xy2(i,1)+c,xy2(i,2),'r+');
    line([xy1(i,1);xy2(i,1)+c],[xy1(i,2); xy2(i,2)],'color',rand(1,3),'linewidth',2);
end